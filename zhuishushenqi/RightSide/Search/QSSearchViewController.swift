//
//  QSSearchViewController.swift
//  zhuishushenqi
//
//  Created Nory Cao on 2017/4/10.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import RxCocoa
import RxSwift

class QSSearchViewController: ZSBaseTableViewController{

	var presenter: QSSearchPresenterProtocol?
    
    var hotWords = [String]() {
        didSet{
            tableView.reloadData()
        }
    }
    var searchList:[[String]] = []
    var searchWords:String = ""
    var books = [Book]()
    var headerView:QSSearchHeaderView!
    var historyHeader:QSHistoryHeaderView!
    var resultTableView:QSSearchResultTable!
    var autoCompleteTable:QSSearchAutoCompleteTable!
    
    lazy var searchController:UISearchController = {
        let searchVC:UISearchController = UISearchController(searchResultsController: nil)
        searchVC.searchBar.placeholder = "输入书名或作者名"
        searchVC.searchResultsUpdater = self
        searchVC.delegate = self
        searchVC.searchBar.delegate = self
//        [UIColor colorWithRed:0.84 green:0.84 blue:0.86 alpha:1.00]
        //        searchVC.obscuresBackgroundDuringPresentation = true
        searchVC.hidesNavigationBarDuringPresentation = true
        searchVC.searchBar.sizeToFit()
        searchVC.searchBar.backgroundColor = UIColor(red: 0.84, green: 0.84, blue: 0.86, alpha: 1.0)
        searchVC.searchBar.barTintColor = UIColor.white
        searchVC.searchBar.layer.borderColor = UIColor.white.cgColor
        return searchVC
    }()

	override func viewDidLoad() {
        super.viewDidLoad()
        initSubview()
        self.presenter?.viewDidLoad()
        
        self.searchController.searchBar.addObserverBlock(forKeyPath: "frame") { (item1, item2, item3) in
            QSLog("item1:\(item1) \nitem2:\(item2) \nitem3:\(item3)")
        }
        
    }
    
    func initSubview(){
    
        tableView.qs_registerCellNib(QSHistoryCell.self)
        
        self.headerView = QSSearchHeaderView(frame: CGRect(x: 0, y: 56, width: self.view.bounds.width, height: 121))
        self.headerView.change = {
            self.presenter?.didClickChangeBtn()
        }
        self.headerView.hotwordClick = { (hotword:String) in
            self.presenter?.didSelectHotWord(hotword: hotword)
        }
        
        self.headerView.hotwords = self.hotWords
        
        self.historyHeader = QSHistoryHeaderView(frame: CGRect(x: 0, y: 0, width: self.view.bounds.width, height: 60))
        self.historyHeader.clear = {
            self.presenter?.didClickClearBtn()
        }
        showHistory()
        self.title = "搜索"
        resultTableView = QSSearchResultTable(frame: getFrame(type: .history))
        resultTableView.selectRow = { (indexPath) in
            self.presenter?.didSelectResultRow(indexPath: indexPath)
        }
        autoCompleteTable = QSSearchAutoCompleteTable(frame: getFrame(type: .searching))
        autoCompleteTable.selectRow = { (indexPath) in
            self.presenter?.didSelectAutoCompleteRow(indexPath: indexPath)
        }
    }
}

extension QSSearchViewController{
    //MARK: - tableView
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return searchList[section].count
    }
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:QSHistoryCell? = tableView.qs_dequeueReusableCell(QSHistoryCell.self)
        cell?.backgroundColor = UIColor.white
        cell?.selectionStyle = .none
        cell?.titleLabel.text = searchList[indexPath.section][indexPath.row]
        return cell!
    }
    
    override func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        
        let headerView = UIView()
        headerView.backgroundColor = UIColor(red: 0.94, green: 0.94, blue: 0.96, alpha: 1.0)
        headerView.addSubview(self.searchController.searchBar)
        headerView.addSubview(self.headerView)
        headerView.addSubview(self.historyHeader)
//        self.headerView.hotwords = self.hotWords
        return headerView
    }
    
    override func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 256
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.presenter?.didSelectHistoryRow(indexPath: indexPath)
    }
}

extension QSSearchViewController:QSSearchViewProtocol{
    func showNoHotwordsView(){
        
    }
    
    func showHotwordsData(hotwords:[String]){
        self.hotWords = hotwords
        self.tableView.reloadData()
    }
    
    func showNoHistoryView(){
        
    }
    
    func showSearchListData(searchList:[[String]]){
        self.searchList = searchList
        self.tableView.reloadData()
    }
    
    func showBooks(books: [Book],key:String) {
        self.books = books
        self.resultTableView.books = self.books
        showResultTable(key:key)
    }
    
    func showAutoComplete(keywords: [String]) {
        self.autoCompleteTable.books = keywords
        showAutoComplete()
    }
}
