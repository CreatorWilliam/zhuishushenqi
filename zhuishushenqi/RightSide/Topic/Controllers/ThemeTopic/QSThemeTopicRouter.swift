//
//  QSThemeTopicRouter.swift
//  zhuishushenqi
//
//  Created Nory Cao on 2017/4/13.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSThemeTopicRouter: QSThemeTopicWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    static func createModule() -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = QSThemeTopicViewController(nibName: nil, bundle: nil)
        let interactor = QSThemeTopicInteractor()
        let router = QSThemeTopicRouter()
        let presenter = QSThemeTopicPresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.output = presenter
        router.viewController = view
        
        return view
    }
    
    func presentDetail(indexPath:IndexPath,models:[ThemeTopicModel]){
        let model = models[indexPath.row]
        viewController?.navigationController?.pushViewController(QSTopicDetailRouter.createModule(id: model._id), animated: true)
    }
    
    func presentReading(model:[ResourceModel],booDetail:BookDetail){
        viewController?.present(QSTextRouter.createModule(bookDetail:booDetail,callback: {(book:BookDetail) in
            
        }), animated: true, completion: nil)
    }
}
