//
//  QSBookDetailViewController.swift
//  zhuishushenqi
//
//  Created Nory Cao on 2017/4/13.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSThemeTopicViewController: BaseViewController ,SegMenuDelegate,UITableViewDataSource,UITableViewDelegate,QSThemeTopicViewProtocol{
    
    var presenter: QSThemeTopicPresenterProtocol?
    var segView:SegMenu!
    
    fileprivate var booksModel:[ThemeTopicModel]?
    fileprivate var titleView:UIButton?
    fileprivate lazy var tableView:UITableView = {
        let tableView = UITableView(frame: CGRect(x: 0, y: kNavgationBarHeight + 40, width: ScreenWidth, height: ScreenHeight - kNavgationBarHeight - 40), style: .grouped)
        tableView.dataSource = self
        tableView.delegate = self
        tableView.sectionHeaderHeight = CGFloat.leastNormalMagnitude
        tableView.sectionFooterHeight = CGFloat.leastNormalMagnitude
        tableView.rowHeight = 93
        tableView.qs_registerCellNib(ThemeTopicCell.self)
        return tableView
    }()
    override func viewDidLoad() {
        super.viewDidLoad()
        view.addSubview(tableView)
        presenter?.viewDidLoad(index: 0)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        layoutSubview()
    }
    
    override func viewWillLayoutSubviews() {
        layoutSubview()
    }
    
    private func layoutSubview() {
        segView.snp.makeConstraints { (make) in
            let statusHeight = UIApplication.shared.statusBarFrame.height
            let navHeight = self.navigationController?.navigationBar.height ?? 0
            make.left.right.equalToSuperview()
            make.top.equalToSuperview().offset(statusHeight + navHeight)
            make.height.equalTo(kTootSegmentViewHeight)
        }
        tableView.snp.makeConstraints { (make) in
            make.left.bottom.right.equalToSuperview()
            make.top.equalTo(segView.snp.bottom)
        }
    }
    
    func setupSegView(titles:[String]){
        segView = SegMenu(frame: CGRect(x: 0, y: kNavgationBarHeight, width: UIScreen.main.bounds.size.width, height: 40), WithTitles: titles)
        segView.menuDelegate = self
        view.addSubview(segView)
    }
    
    func titleView(title:String) -> Void {
        if let _ = self.titleView {
            self.titleView?.setTitle(title, for: .normal)
            let size = self.titleView?.titleLabel?.sizeThatFits(CGSize(width: CGFloat.greatestFiniteMagnitude, height: 21)) ?? CGSize.zero
            let titleSize = self.titleView?.sizeThatFits(CGSize(width: CGFloat.greatestFiniteMagnitude, height: 21)) ?? CGSize.zero
            self.titleView?.frame = CGRect(x: 0, y: 0, width: titleSize.width, height: 21)
            self.titleView?.titleEdgeInsets = UIEdgeInsets(top: 0, left: -(titleSize.width - size.width), bottom: 0, right: 0)
            self.titleView?.imageEdgeInsets = UIEdgeInsets(top: 0, left: size.width + 6, bottom: 0, right: 0)
            return
        }
        let titleView = UIButton(type: .custom)
        titleView.frame = CGRect(x: 0, y: 0, width: 200, height: 21)
        titleView.setImage(UIImage(named: "c_arrow_down"), for: .normal)
        titleView.setTitle(title, for: .normal)
        let size = titleView.titleLabel?.sizeThatFits(CGSize(width: CGFloat.greatestFiniteMagnitude, height: 21)) ?? CGSize.zero
        let titleSize = titleView.sizeThatFits(CGSize(width: CGFloat.greatestFiniteMagnitude, height: 21))
        titleView.frame = CGRect(x: 0, y: 0, width: titleSize.width, height: 21)
        titleView.titleEdgeInsets = UIEdgeInsets(top: 0, left: -(titleSize.width - size.width), bottom: 0, right: 0)
        titleView.imageEdgeInsets = UIEdgeInsets(top: 0, left: size.width + 6, bottom: 0, right: 0)
        titleView.setTitleColor(UIColor.black, for: .normal)
        titleView.addTarget(self, action: #selector(titleViewAction(btn:)), for: .touchUpInside)
        self.titleView = titleView
        self.navigationItem.titleView = self.titleView
    }
    
    @objc func titleViewAction(btn:UIButton){
        let filterVC = ZSFilterThemeViewController()
        filterVC.clickAction =  { (index:Int,title:String,name:String) in
            self.presenter?.didClickFilter(index: index, title: title, name: name)
        }
        self.navigationController?.pushViewController(filterVC, animated: true)
    }
    
    
    func didSelectAtIndex(_ index:Int){
        presenter?.didSelectSeg(index: index)
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return booksModel?.count ?? 0 > 0 ? booksModel!.count:0
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:ThemeTopicCell? = tableView.qs_dequeueReusableCell(ThemeTopicCell.self)
        cell?.backgroundColor = UIColor.white
        cell?.selectionStyle = .none
        cell!.model = booksModel?.count ?? 0 > indexPath.row ? booksModel![indexPath.row]:nil
        return cell!
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return tableView.sectionHeaderHeight
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return tableView.sectionHeaderHeight
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if let models = booksModel {
            presenter?.didSelectAt(indexPath: indexPath, models: models)
        }
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func showThemeTopic(models: [ThemeTopicModel]) {
        booksModel = models
        self.tableView.reloadData()
    }
    
    func showTitle(title: String, index: Int, tag: String, gender: String) {
        self.titleView(title: title)
        presenter?.didSelectTitle(index: index, tag: tag, gender: gender)
    }
    
    func showSeg(titles:[String]){
        setupSegView(titles: titles)
    }
}
