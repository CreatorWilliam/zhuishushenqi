//
//  QSCatalogPresenter.swift
//  zhuishushenqi
//
//  Created caonongyun on 2017/4/21.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSCatalogPresenter: QSCatalogPresenterProtocol {

    weak var view: QSCatalogViewProtocol?
    let interactor: QSCatalogInteractorProtocol
    let router: QSCatalogWireframeProtocol

    init(interface: QSCatalogViewProtocol, interactor: QSCatalogInteractorProtocol, router: QSCatalogWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func viewDidLoad(){
        interactor.requestDetail()
        view?.showActivityView()
    }
    
    func didSelectAt(index:Int,indexPath:IndexPath){
        interactor.show(index: index, indexPath: indexPath)
    }
}

extension QSCatalogPresenter:QSCatalogInteractorOutputProtocol{
    func fetchDataSuccess(models:[[NSDictionary]]){
        view?.hideActivityView()
        view?.showData(models: models)
    }
    
    func fetchDataFailed(){
        view?.hideActivityView()
    }
    
    func showDetail(param: [String : Any]) {
        router.presentDetail(param: param)
    }
}
