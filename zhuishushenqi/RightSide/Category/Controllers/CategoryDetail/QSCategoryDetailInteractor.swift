//
//  QSCategoryDetailInteractor.swift
//  zhuishushenqi
//
//  Created caonongyun on 2017/4/20.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import QSNetwork

//        http://api.zhuishushenqi.com/book/by-categories?gender=male&type=new&major=都市&minor=&start=0&limit=50
class QSCategoryDetailInteractor: QSCategoryDetailInteractorProtocol {

    var output: QSCategoryDetailInteractorOutputProtocol?
    
    var param:[String:Any] = [:]
    
    var models:[[Book]] = [[],[],[],[]]
    
    var selectedIndex = 0
    
    var segTitles = ["新书","热度","口碑","完结"]
    
    func request(index:Int){
        selectedIndex = index
        if models[index].count > 0 {
            self.output?.fetchDataSuccess(models: models[index])
            return
        }
        let urlString = "\(BASEURL)/book/by-categories"
        let types = ["new","hot","reputation","over"]
        let major = param["major"] ?? ""
        let gender = param["gender"] ?? ""
        let type = types[index]
        let params = ["gender":gender,"type":type,"major":"\(major)","minor":"","start":"0","limit":"50"]
        QSNetwork.request(urlString, method: HTTPMethodType.get, parameters: params, headers: nil) { (response) in
            QSLog(response.json)
            if let books = response.json?.object(forKey: "books"){
                do{
                    let booksModel =  try XYCBaseModel.model(withModleClass: Book.self, withJsArray:books as! [AnyObject])  as? [Book]
                    if let books = booksModel {
                        self.models[index] = books
                        self.output?.fetchDataSuccess(models: books)
                    }else{
                        self.output?.fetchDataFailed()
                    }
                }catch{
                    self.output?.fetchDataFailed()
                }
            }else{
                self.output?.fetchDataFailed()
            }
        }
    }
    
    func showSeg(){
        self.output?.showSeg(titles: segTitles)
    }
    
    func showDetail(indexPath: IndexPath) {
        let book = self.models[selectedIndex][indexPath.row]
        self.output?.showDetail(book: book)
    }
}

