//
//  QSSegmentPresenter.swift
//  zhuishushenqi
//
//  Created caonongyun on 2017/4/20.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSSegmentPresenter: QSSegmentPresenterProtocol {

    weak var view: QSSegmentViewProtocol?
    let interactor: QSSegmentInteractorProtocol
    let router: QSSegmentWireframeProtocol
    
    init(interface: QSSegmentViewProtocol, interactor: QSSegmentInteractorProtocol, router: QSSegmentWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func viewDidLoad() {
        interactor.showSeg()
        interactor.request(index: 0)
        view?.showActivityView()
    }
    
    func requestData(index:Int){
        view?.showActivityView()
        interactor.request(index: index)
    }
    
    func requestMore() {
//        view?.showActivityView()
        interactor.requestMore()
    }
    
    func didSelectAt(index: Int) {
        view?.showActivityView()
        view?.showData(books: [])
        interactor.request(index: index)
    }
    
    func didSelectRowAt(indexPath:IndexPath){
        interactor.showDetail(indexPath: indexPath)
    }
}

extension QSSegmentPresenter:QSSegmentInteractorOutputProtocol{
    func fetchDataSuccess(models: [Book]) {
        view?.hideActivityView()
        view?.showData(books: models)
    }
    
    func fetchDataFailed() {
        view?.hideActivityView()
        view?.showData(books: [])
    }
    
    func showSeg(titles: [String]) {
        view?.showSeg(titles: titles)
    }
    
    func showDetail(book: Book) {
        router.presentDetail(book: book)
    }
}

