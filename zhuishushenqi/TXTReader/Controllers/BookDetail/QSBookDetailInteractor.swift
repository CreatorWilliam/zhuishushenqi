//
//  QSBookDetailInteractor.swift
//  zhuishushenqi
//
//  Created caonongyun on 2017/4/13.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import QSNetwork

class QSBookDetailInteractor: QSBookDetailInteractorProtocol {

    var output: QSBookDetailInteractorOutputProtocol!
    
    var bookDetail:BookDetail!
    var hotComment:[QSHotComment] = []
    
    func requestData(id:String){
        let url = "\(BASEURL)/book/\(id)"
        QSNetwork.request(url, method: HTTPMethodType.get, parameters: nil, headers: nil) { (response) in
            if let json = response.json as? [AnyHashable : Any]{
                self.bookDetail = BookDetail.model(with: json)
                self.requestHot(id: id)
            }else{
                self.output.fetchRankFailed()
            }
        }
    }
    
    func requestHot(id:String){
        let hotUrl = "\(BASEURL)/post/review/best-by-book?book=\(id)"
        QSNetwork.request(hotUrl) { (response) in
            do{
                if let json = response.json?["reviews"] as? [Any] {
                    let hot = try XYCBaseModel.model(withModleClass: QSHotComment.self, withJsArray: json) as? [QSHotComment]
                    self.hotComment = hot ?? []
                    self.output.fetchBookSuccess(bookDetail:self.bookDetail,ranks: self.hotComment)
                }else{
                    self.output.fetchRankFailed()
                }
            }catch{
                self.output.fetchRankFailed()
            }
        }
    }
    
    func requestAllChapters(withUrl url:String,param:[String:Any]){
        //先查询书籍来源，根据来源返回的id再查询所有章节
        QSNetwork.request(url, method: HTTPMethodType.get, parameters: param, headers: nil) { (response) in
            var res:[ResourceModel]? = [ResourceModel]()
            if let resources = response.json  {
                do{
                    res = try XYCBaseModel.model(withModleClass: ResourceModel.self, withJsArray: resources as! [Any]) as? [ResourceModel]
                    if let resource = res {
                        let json:NSDictionary? = (response.json as? NSArray)?.object(at: 1) as? NSDictionary
                        self.output.fetchAllChapterSuccess(bookDetail: self.bookDetail, res: resource)
                    }else{
                        self.output.fetchAllChapterFailed()
                    }
                }catch{
                    QSLog(error)
                    self.output.fetchAllChapterFailed()
                }
            }
            else {
                self.output.fetchAllChapterFailed()
            }
        }
    }

}
